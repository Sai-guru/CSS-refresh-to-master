@import url('https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap');
*{
    margin: 0;
    padding: 0;
    font-family: 'Rubik', sans-serif;
    box-sizing: border-box;
}
.container {
    border: 5px solid black;
    margin: 20px;
}

.grid-item {
    color:white;
    font-size: 16px;
    padding: 18px;
    text-align: center;
}
.box-1 {background-color: orange;}
.box-2 {background-color: blue;}
.box-3 {background-color: blueviolet;}
.box-4 {background-color: brown;}
.box-5 {background-color: cadetblue;}
.box-6 {background-color: coral;}
.box-7 { background-color: darkblue;}
.box-8 {background-color: darkcyan;}
.box-9 {background-color: darkgoldenrod;}


/* main grid */

.container {
    display: grid;
    /* display: inline-grid; */
    /* no of cols is our wish  */
    /* grid-template-columns:100px 200px 300px ;
    grid-template-columns: repeat(3,300px); 
    grid-template-columns: 1fr 2fr 3fr; */
    /* grid-template-columns: repeat(3,minmax(200px,1fr)) ; */
    /* height:800px;  */
    /* height is needed for row */
    /* grid-template-columns: repeat(3,1fr); */


    /* grid-template-rows: 100px 200px 300px;
    grid-template-rows: repeat(3,100px);
    grid-template-rows: repeat(3,1fr); */

    /* shorthand   (row)/(col) */
    grid-template: repeat(3,200px) / repeat(3,200px);
    /* column-gap: 20px;
    row-gap: 20px; */
    /* gap: 20px 60px; */



/* justify-items: This property is used to align items along the inline (row) axis within their grid area. So, you are correct that it's for X-axis alignment if your "X-axis" is the row direction.

align-items: This property is used to align items along the block (column) axis within their grid area. So, you are correct that it's for Y-axis alignment if your "Y-axis" is the column direction. */

/* justify-items: stretch;
justify-items: start;
justify-items: end; */
/* justify-items: center;  */

/* align-items: baseline; */
/* align-items: start;
align-items: end;
align-items: center; */

/* place-items: align-items justify-items; */
/* place-items: center end; */
/* place-items: center; */

/* justify-content: start;
justify-content: end;
justify-content: center;

justify-content: space-between;
justify-content: space-around;
justify-content: space-evenly; */

 /* align-content: start;
 align-content: end;
 align-content: center; */
 /* align-content: space-between; */
 /* align-content: space-around; */
 /* align-content: space-evenly; */
 /* justify-content: center; */

 /* place-content: center; */
 

 /* grid-auto-flow: row;
 grid-auto-flow: column; */

 /* grid-auto-rows: 200px; */
 /* grid-auto-rows: 1fr; */
 /* grid-auto-columns: 300px; */

 

}


 /* to cover the cells  , just invade the space not that content*/
.box-1 {
    /* grid-column-start:1 ; */
    /* grid-column-end: 4; */
    /* grid-column-end:span 2; */
/* short hand */
    grid-column: 1/span 2;
    /* grid-row-start: 1; */
    /* grid-row-end: 3; */
    grid-row: 1/span 3;
}


/* jsingle element move -justify-self works on x -axis , if need y -axis use align-self */
.box-2 {
    justify-self: stretch;
    justify-self: end;
    justify-self: start;
    justify-self: center;
    
    align-self: stretch;
    align-self: end;
    align-self: start;
    align-self: center;

    /* shorthand align-self: justify-self; */
    place-self: start;
    place-self: center;
    place-self: end;
    place-self : start center;

} 